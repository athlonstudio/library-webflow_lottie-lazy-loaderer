const lazyLotties=[...document.querySelectorAll("[data-loading=\"lazy\"]")],checkLoaded=a=>!!(a.children.length&&("svg"===a.children[0].tagName.toLowerCase()||"canvas"===a.children[0].tagName.toLowerCase()));if(!!lazyLotties.length){function a(a,b){const c=a.target;a.isIntersecting?(c.dataset.loop=c.dataset.defaultLoop,c.dataset.autoplay=c.dataset.defaultAutoplay,c.dataset.duration=c.dataset.defaultDuration,c.dataset.state="playing",Webflow.require("lottie").createInstance(c),"true"===c.dataset.playOnce&&b.unobserve(c)):(c.dataset.duration=.01,c.dataset.loop=0,c.dataset.state="paused",Webflow.require("lottie").createInstance(c))}function b(b,c,d){const e=b.target;b.isIntersecting&&!checkLoaded(e)&&"none"!==e.style.display&&(console.log(e),e.dataset.animationType="lottie",e.dataset.src=e.dataset.defaultSrc,Webflow.require("lottie").createInstance(e),e.dataset.willTransform&&(e.style.position="relative"),e.querySelector("img")&&e.querySelector("img").remove(),!(0>b.boundingClientRect.bottom||0<=b.boundingClientRect.top-Math.max(document.documentElement.clientHeight,window.innerHeight))&&a(b,d),c.unobserve(e))}function c(a){a.dataset.defaultSrc=a.dataset.src,a.dataset.defaultLoop=a.dataset.loop,a.dataset.defaultAutoplay=a.dataset.autoplay,a.dataset.state="paused",a.dataset.src="",a.dataset.loop=0,a.dataset.animationType="lazy-lottie",a.dataset.duration=.01,a.dataset.autoplay=0,a.style.overflow="hidden",a.dataset.poster&&("absolute"!==a.style.position&&(a.style.position="relative"),a.appendChild(Object.assign(document.createElement("img"),{src:a.dataset.poster,loading:"eager",style:"position:absolute;left:50%;transform:translate(-50%,-50%);"}))),a.dataset.willTransform&&(a.style.left="0px",a.style.top="0px",a.style.position="absolute")}lazyLotties.forEach(a=>c(a));const d=new IntersectionObserver(b=>b.forEach(b=>{const c=b.target;"none"!==c.style.display&&checkLoaded(c)&&a(b,d)}),{root:null,rootMargin:"0px"}),e=new IntersectionObserver(a=>a.forEach(a=>b(a,e,d)),{root:null,rootMargin:"1250px"});lazyLotties.forEach(a=>e.observe(a)),lazyLotties.forEach(a=>d.observe(a))}